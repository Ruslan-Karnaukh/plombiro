{"mappings":"AAKqB,IAQrB,UAAwBA,OAACA,EAAS,EAACC,SAAEA,EAAW,KAAO,IAEnDC,KAAKF,OAASA,EACdE,KAAKD,SAAWA,EAKjB,MAAME,EAAS,CACdC,UAAWC,GACFA,EAAI,GAAM,EAAIA,EAAIA,GAAU,EAAI,EAAIA,GAAKA,EAAnB,EAE/BC,WAAYD,GACHA,EAAI,GAAM,EAAIA,EAAIA,EAAIA,GAAKA,EAAI,IAAM,EAAIA,EAAI,IAAM,EAAIA,EAAI,GAAK,EAEzEE,WAAYF,GACHA,EAAI,GAAM,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,EAAI,IAAMA,EAAIA,EAAIA,EAAIA,EAE7DG,WAAYH,GACHA,EAAI,GAAM,GAAKA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,EAAI,KAAOA,EAAIA,EAAIA,EAAIA,EAAIA,GASjEI,EAJiBC,MAAMC,UAAUC,MAAMC,KAAKC,SAASC,qBAAqB,MAInDC,QAAOC,GAFpB,CAAAA,IAAiD,IAAxCA,EAAKC,MAAQD,EAAKC,KAAKC,QAAQ,MAEZC,CAAQH,KAI9CI,EAAgBZ,EAAUO,QAAOC,GAFpB,CAAAA,GAAQA,EAAMK,UAAYC,OAAOC,SAASF,UAAa,IAAOL,EAAKK,UAAYC,OAAOC,SAASF,UAAcL,EAAKQ,QAAUD,SAASC,OAEzGC,CAAWT,KAEpDU,EAAYC,IAChB,MAEMC,EAAWD,EAAGE,aAAa,QAC3BC,EAAejB,SAASkB,cAAcH,GAEtCI,EAAeF,EAAaD,aAAa,sBAE/C9B,EAASiC,GAA8B/B,KAAKF,OAE5C,MAAMkC,GATgBC,EASUJ,EATJK,KAAKC,MAAMF,EAAGG,wBAAwBC,MAA5C,IAAAJ,EAWtB,MAAMK,EAAoBjB,OAAOkB,aAAe3B,SAAS4B,gBAAgBC,UAEnEC,EAAOJ,EACPK,EAAKL,EAAoBN,EAAYlC,EAG3C,IAAI8C,GAAO,EACPC,EAAQ,KACRC,EAAM,KAEV,MAMMC,EAAYC,IAChB,GAAIJ,EAIF,OAHAhC,SAAS4B,gBAAgBC,UAAYE,EACrCd,EAAaoB,aACb5B,OAAO6B,QAAQC,UAAU,GAAI,GAAIxB,IAG/Be,GAAQC,GAAMK,EAAOH,GAAS9C,KAAU6C,GAAO,GACnD,MACMQ,EAAMnD,EAAOI,YADD2C,EAAOH,GAAS9C,GAE5BsD,EAAgBX,GAAQC,EAAKD,GAAQU,EAC3CxC,SAAS4B,gBAAgBC,UAAYY,EACrCC,sBAAsBP,EAAU,EAGlCO,uBArBkBN,IAChBH,EAAQG,EACRF,EAAMD,EAAQ9C,EACdgD,EAAUC,EAAK,GAkBe,EAIlCpC,SAAS2C,iBAAiB,SAASC,IACjC,MAAMC,EAAYtC,EAAcL,QAAOC,GAAQyC,EAAEE,SAAW3C,IAAM,GAC/D0C,IACDD,EAAEG,iBACFlC,EAASgC,G,IA7FI,CAAmB,CACtC3D,OAAQ,GACRC,SAAU,MAIZ6D,QAAQC,IAAI","sources":["src/js/scroll-anchors.js"],"sourcesContent":["\n//  TODO: check if maximum page scroll has been exceeded and scroll tot hat point instead of trying to scroll past it.\n\n// TODO: Simplify the easing setup. Perhaps use them as an optional import to keep main lib small.\n\nconst smoothScroll = new ScrollToAnchor({\n  offset: 70,\n  duration: 1000,\n});\n\n\nconsole.log('Index.js file ðŸ˜Ž');\n\nfunction ScrollToAnchor({offset = 0, duration = 800} = {}) {\n\n    this.offset = offset;\n    this.duration = duration;\n  \n    /* \n    Easing functions\n    */\n   const easing = {\n    inOutQuad: t => {\n      return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n    },\n    inOutCubic: t => {\n      return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n    },\n    inOutQuart: t => {\n      return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n    },\n    inOutQuint: t => {\n      return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n    },\n  };\n  \n    \n    const allLinks = () => Array.prototype.slice.call(document.getElementsByTagName('a'));\n  \n    const hasHash = link => (link.href && link.href.indexOf('#')) != -1;\n  \n    const hashLinks = allLinks().filter(link => hasHash(link) );\n  \n    const isSamePage = link => (link.pathname == window.location.pathname) || ('/' + link.pathname == window.location.pathname) && (link.search == location.search);\n  \n    const samePageLinks = hashLinks.filter(link => isSamePage(link));\n  \n    const scrollTo = (el) => {\n      const distanceToTop = el => Math.floor(el.getBoundingClientRect().top);\n  \n      const targetID = el.getAttribute('href');\n      const targetAnchor = document.querySelector(targetID);\n  \n      const customOffset = targetAnchor.getAttribute('data-anchor-offset');\n  \n      offset = customOffset ? customOffset : this.offset;\n      \n      const anchorTop = distanceToTop(targetAnchor);\n  \n      const pageCurrentScroll = window.pageYOffset || document.documentElement.scrollTop;\n  \n      const from = pageCurrentScroll;\n      const to = pageCurrentScroll + anchorTop - offset;\n  \n      // flags for animation loop\n      let stop = false;\n      let start = null;\n      let end = null;\n  \n      const startAnim = time => {\n        start = time;\n        end = start + duration;\n        nextFrame(time);\n      };\n    \n      const nextFrame = time => {\n        if (stop) {\n          document.documentElement.scrollTop = to;\n          targetAnchor.focus();\n          window.history.pushState('', '', targetID);\n          return;\n        }\n        if (from == to || time - start >= duration) stop = true;\n        const progress = (time - start) / duration;\n        const val = easing.inOutQuart(progress);\n        const nextPosition = (from + (to - from) * val);\n        document.documentElement.scrollTop = nextPosition;\n        requestAnimationFrame(nextFrame);\n      };\n    \n      requestAnimationFrame(startAnim);\n    };\n  \n    // deferred click listener on the body\n    document.addEventListener('click', e => {\n      const validLink = samePageLinks.filter(link => e.target === link)[0];\n      if(validLink) {\n        e.preventDefault();\n        scrollTo(validLink);\n      }\n    });\n  \n  };\n  \n"],"names":["offset","duration","this","easing","inOutQuad","t","inOutCubic","inOutQuart","inOutQuint","hashLinks","Array","prototype","slice","call","document","getElementsByTagName","filter","link","href","indexOf","hasHash","samePageLinks","pathname","window","location","search","isSamePage","scrollTo","el1","targetID","getAttribute","targetAnchor","querySelector","customOffset","anchorTop","el","Math","floor","getBoundingClientRect","top","pageCurrentScroll","pageYOffset","documentElement","scrollTop","from","to","stop","start","end","nextFrame","time","focus","history","pushState","val","nextPosition","requestAnimationFrame","addEventListener","e","validLink","target","preventDefault","console","log"],"version":3,"file":"index.9b693268.js.map"}